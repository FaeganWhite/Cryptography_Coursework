/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author faegan
 */
public class CreditJFrame extends javax.swing.JFrame {

    /**
     * Creates new form CreditJFrame
     */
    public CreditJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Verify");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Calc..");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ISBN/CreditCard Validator");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Verify");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Clear");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Calc..");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // Declare an array to store the ISBN number
        int[] n = new int[10];
        // Declare an array to store the Credit Card number
        int[] c = new int[16];
        // Create a variable to store the multiplied sum of the ISBN number
        int ISBNsum = 0;
        // Get the value of the text field
        String s = jTextField2.getText();
        // If the string input length is 10
        if (s.length() == 10) {
            // For every character in the text field
            for (int x = 0; x < 10; x++) {
                // If the character is an X
                if (!String.valueOf(s.charAt(x)).equals("X")) {
                    // Try
                    try {
                        // Set get the value as an integer and add it to the ISBN number
                        n[x] = Integer.parseInt(String.valueOf(s.charAt(x)));
                        // Add the value multiplied by it's position to the ISBN sum
                        ISBNsum += (x+1)*n[x];
                        // Print if there was an error
                    } catch(Exception e) {
                        // Print if there was an error
                        jTextArea1.setText("ERROR. This ISBN number is not valid!");
                    }
                } else {
                    // Try
                    try {
                        // Set get the value as 10 and add it to the ISBN number
                        n[x] = 10;
                        // Add 10 multiplied by its position to the ISBN number
                        ISBNsum += (x+1)*10;
                        // Otherwise print there was an error
                    } catch(Exception e) {
                        // Print if there was an error
                        jTextArea1.setText("ERROR. This ISBN number is not valid!");
                    }
                }
            }
            // If the modulus of the sum is 0
            if (ISBNsum%11 == 0) {
                // Print that the number is valid
                jTextArea1.setText("This ISBN number is valid!");
            } else {
                // Otherwise print that it isn't valid
                jTextArea1.setText("This ISBN number is not valid!");
            }
            // Else if the length is 16 credit card
        } else if (s.length() == 16) {
            // For every character in the text field
            for (int x = 0; x < 16; x++) {
                try {
                    // Set get the value as an integer and add it to the ISBN number
                    c[x] = Integer.parseInt(String.valueOf(s.charAt(x)));
                    // If the position is even
                    if (x%2 == 0){
                        // Souble the number
                        int doubled = 2*c[x];
                        // If the doubled number is bigger than 10
                        if (doubled >= 10) {
                            // Take away 9
                            doubled -= 9;
                        }
                        // Add the value doubled to the ISBN sum
                        ISBNsum += doubled;
                    } else {
                        // Add the value doubled to the ISBN sum
                        ISBNsum += c[x];
                    }
                    // Print if there was an error
                } catch(Exception e) {
                    // Print if there was an error
                    jTextArea1.setText("ERROR. This credit card number is not valid!");
                }
            }
            // If the modulus of the sum is 0
            if (ISBNsum%10 == 0) {
                // Print that the number is valid
                jTextArea1.setText("This credit card number is valid!");
            } else {
                // Otherwise print that it isn't valid
                jTextArea1.setText("This credit card number is not valid!");
            }
        } else {
            // Print if there was an error
            jTextArea1.setText("ERROR. The input isn't the right length!\n(Must be 10 or 16 characters");
        }
    }//GEN-LAST:event_jButton1MouseClicked

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // Clear the text field
        jTextField2.setText("");
        // Clear the text area
        jTextArea1.setText("");
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    // last digit calculator
    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // Declare an array to store the ISBN number
        int[] n = new int[10];
        // Declare an array to store the Credit Card number
        int[] c = new int[16];
        // Create a variable to store the multiplied sum of the ISBN number
        int ISBNsum = 0;
        // Get the value of the text field
        String s = jTextField2.getText();
        // If the input length is 10
        if (s.length() == 9) {
            // For every character in the text field
            for (int x = 0; x < 9; x++) {
                // Set get the value as an integer and add it to the ISBN number
                n[x] = Integer.parseInt(String.valueOf(s.charAt(x)));
                // Add the value multiplied by its position to the ISBN number
                ISBNsum += (x+1)*n[x];
            }
            // Get the remainder after a divide by 0
            int modResult = ISBNsum%11;
            // If the result isn't 10
            if (modResult != 10) {
                // Print the result to the text area
                jTextArea1.setText("The 10th digit is: "+String.valueOf(modResult)+".");
            } else {
                // Print the result to the text area
                jTextArea1.setText("The 10th digit is: X.");
            }
            // Otherwise if the length is 15 (a credit card)
        } else if (s.length() == 15) {
            // For every character in the text field
            for (int x = 0; x < 15; x++) {
                // Set get the value as an integer and add it to the ISBN number
                c[x] = Integer.parseInt(String.valueOf(s.charAt(x)));
                // If the position is even
                if (x%2 == 0){
                    // Souble the number
                    int doubled = 2*c[x];
                    // If the doubled number is bigger than 10
                    if (doubled >= 10) {
                        // Take away 9
                        doubled -= 9;
                    }
                    // Add the value doubled to the ISBN sum
                    ISBNsum += doubled;
                } else {
                    // Add the value doubled to the ISBN sum
                    ISBNsum += c[x];
                }
            }
            // Get the remainder after a divide by 0
            int modResult = ISBNsum%10;
            // Get the remainder from 10 again
            int modResult2 = 10-modResult;
            // Print the result to the text area
            jTextArea1.setText("The 16th digit is: "+String.valueOf(modResult2)+".");
        } else {
            // Print if there was an error
            jTextArea1.setText("ERROR. The input isn't the right length!\n(Must be 9 or 15 characters)");
        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // Try
        try {
            // Declare an array to store the ISBN number
            int[] n = new int[10];
            // Declare an array to store the Credit Card number
            int[] c = new int[16];
            // Create a variable to store the multiplied sum of the ISBN number
            int ISBNsum = 0;
            // Get the value of the text field
            String s = jTextField2.getText();
            // If the input length is 10
            if (s.length() == 9) {
                // For every character in the text field
                for (int x = 0; x < 9; x++) {
                    // Set get the value as an integer and add it to the ISBN number
                    n[x] = Integer.parseInt(String.valueOf(s.charAt(x)));
                    // Add the value multiplied by its position to the ISBN number
                    ISBNsum += (x+1)*n[x];
                }
                // Get the remainder after a divide by 0
                int modResult = ISBNsum%11;
                // If the result isn't 10
                if (modResult != 10) {
                    // Print the result to the text area
                    jTextArea1.setText("The 10th digit is: "+String.valueOf(modResult)+".");
                } else {
                    // Print the result to the text area
                    jTextArea1.setText("The 10th digit is: X.");
                }
                // Otherwise if the length is 15 (a credit card)
            } else if (s.length() == 15) {
                // Try
                try {
                    // Convert the input to an integer
                    Integer.getInteger(s);
                // If there is an error
                } catch (Exception e) {
                    // Set the text area to an error
                    jTextArea1.setText("ERROR. Input must be an integer.");
                    // Break the function
                    return;
                }
                // For every character in the text field
                for (int x = 0; x < 15; x++) {
                    // Set get the value as an integer and add it to the ISBN number
                    c[x] = Integer.parseInt(String.valueOf(s.charAt(x)));
                    // If the position is even
                    if (x%2 == 0){
                        // Souble the number
                        int doubled = 2*c[x];
                        // If the doubled number is bigger than 10
                        if (doubled >= 10) {
                            // Take away 9
                            doubled -= 9;
                        }
                        // Add the value doubled to the ISBN sum
                        ISBNsum += doubled;
                    } else {
                        // Add the value doubled to the ISBN sum
                        ISBNsum += c[x];
                    }
                }
                // Get the remainder after a divide by 0
                int modResult = ISBNsum%10;
                // Get the remainder from 10 again
                int modResult2 = 10-modResult;
                // Print the result to the text area
                jTextArea1.setText("The 16th digit is: "+String.valueOf(modResult2)+".");
            } else {
                // Print if there was an error
                jTextArea1.setText("ERROR. The input isn't the right length!\n(Must be 9 or 15 characters)");
            }
        // If there's an error
        } catch(Exception e) {
            // Print if there was an error
            jTextArea1.setText("ERROR. input must be an integer");
        }
    }//GEN-LAST:event_jButton5MouseClicked

    // Verify number
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        int[] n = new int[10];
        // Declare an array to store the Credit Card number
        int[] c = new int[16];
        // Create a variable to store the multiplied sum of the ISBN number
        int ISBNsum = 0;
        // Get the value of the text field
        String s = jTextField2.getText();
        // Set invalid to false
        boolean invalid = false;
        // If the string input length is 10
        if (s.length() == 10) {
            // For every character in the text field
            for (int x = 0; x < 10; x++) {
                // If the character is an X
                if (!String.valueOf(s.charAt(x)).equals("X")) {
                    // Try
                    try {
                        // Set get the value as an integer and add it to the ISBN number
                        n[x] = Integer.parseInt(String.valueOf(s.charAt(x)));
                        // Add the value multiplied by it's position to the ISBN sum
                        ISBNsum += (x+1)*n[x];
                        // Print if there was an error
                    } catch(Exception e) {
                        // Set the input to invalid
                        invalid = true;
                        // Break the loop
                        break;
                    }
                } else {
                    // Try
                    try {
                        // Set get the value as 10 and add it to the ISBN number
                        n[x] = 10;
                        // Add 10 multiplied by its position to the ISBN number
                        ISBNsum += (x+1)*10;
                        // Otherwise print there was an error
                    } catch(Exception e) {
                        // Print if there was an error
                        jTextArea1.setText("ERROR. This ISBN number is not valid!");
                    }
                }
            }
            //If the number was invalid
            if (invalid == true) {
                // Print if there was an error
                jTextArea1.setText("ERROR. Input must be an integer");
                // Break the function
                return;
            }
            // If the modulus of the sum is 0 
            if (ISBNsum%11 == 0) {
                // Print that the number is valid
                jTextArea1.setText("This ISBN number is valid!");
            } else {
                // Otherwise print that it isn't valid
                jTextArea1.setText("This ISBN number is not valid!");
            }
            // Else if the length is 16 credit card
        } else if (s.length() == 16) {
            // Try
            try {
                // Convert the input to an integer
                long input = Long.parseLong(s);
             // If there is an error
            } catch (Exception e) {
                // Set the text area to an error
                jTextArea1.setText("ERROR. Input must be an integer.");
                // Break the function
                return;
            }
            // For every character in the text field
            for (int x = 0; x < 16; x++) {
                // try
                try {
                    // Set get the value as an integer and add it to the ISBN number
                    c[x] = Integer.parseInt(String.valueOf(s.charAt(x)));
                    // If the position is even
                    if (x%2 == 0){
                        // Souble the number
                        int doubled = 2*c[x];
                        // If the doubled number is bigger than 10
                        if (doubled >= 10) {
                            // Take away 9
                            doubled -= 9;
                        }
                        // Add the value doubled to the ISBN sum
                        ISBNsum += doubled;
                    } else {
                        // Add the value doubled to the ISBN sum
                        ISBNsum += c[x];
                    }
                    // Print if there was an error
                } catch(Exception e) {
                    // Print if there was an error
                    jTextArea1.setText("ERROR. This credit card number is not valid!");
                }
            }
            //If the number was invalid
            if (invalid == true) {
                // Print if there was an error
                jTextArea1.setText("ERROR. Input must be an integer");
                // Break the function
                return;
            }
            // If the modulus of the sum is 0
            if (ISBNsum%10 == 0) {
                // Print that the number is valid
                jTextArea1.setText("This credit card number is valid!");
            } else {
                // Otherwise print that it isn't valid
                jTextArea1.setText("This credit card number is not valid!");
            }
        } else {
            // Print if there was an error
            jTextArea1.setText("ERROR. The input isn't the right length!\n(Must be 10 or 16 characters");
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreditJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreditJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreditJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreditJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreditJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
